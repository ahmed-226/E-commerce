version: '3.8'

services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - catalog-service
      - order-service
      - payment-service
      - shipping-service
      - user-service
      - analytics-service
    environment:
      - NODE_ENV=production

  auth-service:
    build: ./auth-service
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/auth

  catalog-service:
    build: ./catalog-service
    ports:
      - "3002:3002"
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/catalog

  order-service:
    build: ./order-service
    ports:
      - "3003:3003"
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/orders

  payment-service:
    build: ./payment-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production

  shipping-service:
    build: ./shipping-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production

  user-service:
    build: ./user-service
    ports:
      - "3006:3006"
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/users

  analytics-service:
    build: ./analytics-service
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=production

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example

  monitor:
    image: dockersamples/visualizer
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mongodb_data: